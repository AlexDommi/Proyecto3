// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto3.Data;

#nullable disable

namespace Proyecto3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proyecto3.Models.Clientes", b =>
                {
                    b.Property<string>("ClienteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClienteApellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClienteNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContactoId")
                        .HasColumnType("int");

                    b.Property<int>("CorreoId")
                        .HasColumnType("int");

                    b.Property<int>("CorreosCorreoId")
                        .HasColumnType("int");

                    b.Property<int>("DireccionId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadosEstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HighSystem")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MunicipiosMunicipioId")
                        .HasColumnType("int");

                    b.Property<int>("SeguimientoId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ClienteId");

                    b.HasIndex("ContactoId");

                    b.HasIndex("CorreosCorreoId");

                    b.HasIndex("DireccionId");

                    b.HasIndex("EstadosEstadoId");

                    b.HasIndex("MunicipiosMunicipioId");

                    b.HasIndex("SeguimientoId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Proyecto3.Models.Contactos", b =>
                {
                    b.Property<int>("ContactoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactoId"));

                    b.Property<string>("ContactoTelefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HighSystem")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ContactoId");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("Proyecto3.Models.Correos", b =>
                {
                    b.Property<int>("CorreoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CorreoId"));

                    b.Property<string>("CorreoDireccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HighSystem")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("CorreoId");

                    b.ToTable("Correos");
                });

            modelBuilder.Entity("Proyecto3.Models.Direcciones", b =>
                {
                    b.Property<int>("DireccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DireccionId"));

                    b.Property<string>("DireccionCalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionCodigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionColonia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionEntreCalle1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionEntreCalle2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HighSystem")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("DireccionId");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("Proyecto3.Models.Estados", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoId"));

                    b.Property<int?>("DireccionesDireccionId")
                        .HasColumnType("int");

                    b.Property<string>("EstadoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HighSystem")
                        .HasColumnType("datetime2");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("EstadoId");

                    b.HasIndex("DireccionesDireccionId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Proyecto3.Models.Municipios", b =>
                {
                    b.Property<int>("MunicipioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MunicipioId"));

                    b.Property<int?>("DireccionesDireccionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HighSystem")
                        .HasColumnType("datetime2");

                    b.Property<string>("MunicipioNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("MunicipioId");

                    b.HasIndex("DireccionesDireccionId");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("Proyecto3.Models.Seguimientos", b =>
                {
                    b.Property<int>("SeguimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeguimientoId"));

                    b.Property<DateTime>("HighSystem")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeguimientoDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SeguimientoFecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("SeguimientoId");

                    b.ToTable("Seguimientos");
                });

            modelBuilder.Entity("Proyecto3.Models.Clientes", b =>
                {
                    b.HasOne("Proyecto3.Models.Contactos", "Contacto")
                        .WithMany("Clientes")
                        .HasForeignKey("ContactoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto3.Models.Correos", "Correos")
                        .WithMany("Clientes")
                        .HasForeignKey("CorreosCorreoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto3.Models.Direcciones", "Direccion")
                        .WithMany("Clientes")
                        .HasForeignKey("DireccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto3.Models.Estados", null)
                        .WithMany("Clientes")
                        .HasForeignKey("EstadosEstadoId");

                    b.HasOne("Proyecto3.Models.Municipios", null)
                        .WithMany("Clientes")
                        .HasForeignKey("MunicipiosMunicipioId");

                    b.HasOne("Proyecto3.Models.Seguimientos", "Seguimiento")
                        .WithMany("Clientes")
                        .HasForeignKey("SeguimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contacto");

                    b.Navigation("Correos");

                    b.Navigation("Direccion");

                    b.Navigation("Seguimiento");
                });

            modelBuilder.Entity("Proyecto3.Models.Estados", b =>
                {
                    b.HasOne("Proyecto3.Models.Direcciones", null)
                        .WithMany("Estados")
                        .HasForeignKey("DireccionesDireccionId");

                    b.HasOne("Proyecto3.Models.Municipios", "Municipio")
                        .WithMany("Estados")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Proyecto3.Models.Municipios", b =>
                {
                    b.HasOne("Proyecto3.Models.Direcciones", null)
                        .WithMany("Municipios")
                        .HasForeignKey("DireccionesDireccionId");
                });

            modelBuilder.Entity("Proyecto3.Models.Contactos", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("Proyecto3.Models.Correos", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("Proyecto3.Models.Direcciones", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Estados");

                    b.Navigation("Municipios");
                });

            modelBuilder.Entity("Proyecto3.Models.Estados", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("Proyecto3.Models.Municipios", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Estados");
                });

            modelBuilder.Entity("Proyecto3.Models.Seguimientos", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
